(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1535],{81936:function(e,s,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/scales/linear-scale",function(){return i(70438)}])},88578:function(e,s,i){"use strict";i.d(s,{X:function(){return t}});var n=i(85893);i(67294);let t=e=>{let{vizName:s,height:i="500px"}=e;return(0,n.jsx)("iframe",{src:"https://codesandbox.io/embed/github/holtzy/react-graph-gallery/tree/main/viz/"+s+"?fontsize=14&hidenavigation=1&theme=dark&expanddevtools=0",style:{width:"100%",height:i,border:"solid",borderWidth:2,borderRadius:"4px",overflow:"hidden"},allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})}},13400:function(e,s,i){"use strict";i.d(s,{q:function(){return o}});var n=i(85893),t=i(22725),r=i(67294),a=i(88578),l=i(8117),c=i(5);let o=e=>{let{exercise:s}=e,[i,o]=(0,r.useState)(!1);return(0,r.useEffect)(()=>{let e=e=>{"Escape"===e.key&&o(!1)};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),(0,n.jsxs)("div",{children:[(0,n.jsxs)("div",{className:"grid grid-cols-2 gap-4 pt-4",children:[(0,n.jsxs)("div",{children:[(0,n.jsx)(l.C,{children:"To Do"}),(0,n.jsx)("div",{className:"mt-4",children:s.toDo})]}),(0,n.jsxs)("div",{children:[(0,n.jsx)(l.C,{children:"Why it matters"}),(0,n.jsx)("div",{className:"mt-4 pl-4",children:s.whyItMatters})]})]}),(0,n.jsxs)(t.mQ,{defaultValue:"practice",className:"relative",children:[(0,n.jsxs)("div",{className:"flex justify-center items-center",children:[(0,n.jsxs)(t.dr,{children:[(0,n.jsx)(t.SP,{value:"practice",children:"Practice"}),(0,n.jsx)(t.SP,{value:"solution",children:"Solution"})]}),(0,n.jsx)("div",{className:"absolute right-0",children:(0,n.jsx)(c.z,{size:"sm",variant:"outline",onClick:()=>o(!0),children:"Show full screen"})})]}),(0,n.jsx)(t.nU,{value:"practice",children:(0,n.jsxs)("div",{className:i?"fixed h-screen inset-0 flex justify-center items-center":"my-4",children:[i&&(0,n.jsx)("div",{className:"absolute inset-0 w-full h-full bg-white/80"}),(0,n.jsxs)("div",{className:i?"relative w-4/5 h-4/5":"",children:[(0,n.jsx)(a.X,{vizName:s.practiceSandbox,height:i?"100%":"500px"}),i&&(0,n.jsx)("div",{className:"w-full mt-2 flex justify-center",children:(0,n.jsx)(c.z,{onClick:()=>o(!1),variant:"destructive",children:"Leave Fullscreen mode"})})]})]})}),(0,n.jsx)(t.nU,{value:"solution",children:(0,n.jsx)("div",{className:"full-bleed my-4 max-w-7xl mx-auto",children:(0,n.jsx)(a.X,{vizName:s.solutionSandbox})})})]})]})}},22725:function(e,s,i){"use strict";i.d(s,{SP:function(){return o},dr:function(){return c},mQ:function(){return l},nU:function(){return d}});var n=i(85893),t=i(67294),r=i(60434),a=i(77522);let l=r.fC,c=t.forwardRef((e,s)=>{let{className:i,...t}=e;return(0,n.jsx)(r.aV,{ref:s,className:(0,a.cn)("inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",i),...t})});c.displayName=r.aV.displayName;let o=t.forwardRef((e,s)=>{let{className:i,...t}=e;return(0,n.jsx)(r.xz,{ref:s,className:(0,a.cn)("inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",i),...t})});o.displayName=r.xz.displayName;let d=t.forwardRef((e,s)=>{let{className:i,...t}=e;return(0,n.jsx)(r.VY,{ref:s,className:(0,a.cn)("mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",i),...t})});d.displayName=r.VY.displayName},70438:function(e,s,i){"use strict";i.r(s),i.d(s,{default:function(){return x}});var n=i(85893);i(67294);var t=i(43710),r=i(41843),a=i(11236),l=i(41664),c=i.n(l),o=i(45023),d=i(3572),h=i(47498),u=i(13400);function x(){let e=a.Y.find(e=>"/course/scales/linear-scale"===e.link);return e?(0,n.jsxs)(r.p,{title:e.name,seoDescription:"",nextTocItem:a.Y.find(e=>"/course/scales/other-scale-types"===e.link),previousTocItem:a.Y.find(e=>"/course/scales/introduction"===e.link),children:[(0,n.jsx)(t.Z,{title:e.name,lessonStatus:e.status,readTime:e.readTime,selectedLesson:e,description:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("p",{children:["The previous lesson described the concept of"," ",(0,n.jsx)(c(),{href:"/course/scales/introduction",children:"scale"})," in data visualization. Scales allow, for instance, to translate a value in our dataset to a position on the screen."]}),(0,n.jsxs)("p",{children:["Now, let's study the most common scale type and its d3.js implementation: the ",(0,n.jsx)("b",{children:"linear"})," scale and its"," ",(0,n.jsx)("code",{children:"scaleLinear()"})," function."]})]})}),(0,n.jsx)(o.M,{}),(0,n.jsxs)("h2",{children:["The ",(0,n.jsx)("code",{children:"scaleLinear()"})," function"]}),(0,n.jsxs)("p",{children:["The ",(0,n.jsx)("code",{children:"scaleLinear()"})," function is part of the"," ",(0,n.jsx)("a",{href:"https://github.com/d3/d3-scale",children:"d3-scale"})," module of d3.js."]}),(0,n.jsxs)("p",{children:["It expects 2 inputs: a ",(0,n.jsx)("b",{children:"domain"})," and a ",(0,n.jsx)("b",{children:"range"}),"."]}),(0,n.jsx)("h3",{className:"mt-2 text-md",children:"\uD83C\uDFE0 Domain"}),(0,n.jsxs)("p",{children:["Usually an array of length 2. It provides the ",(0,n.jsx)("code",{children:"min"})," and the"," ",(0,n.jsx)("code",{children:"max"})," of the values we have in the dataset."]}),(0,n.jsx)("h3",{className:"mt-2 text-md",children:"\uD83D\uDCCF Range"}),(0,n.jsxs)("p",{children:["Usually an array of length 2. It provides the start and the end of the positions we are targeting ",(0,n.jsx)("b",{children:"in pixel"}),"."]}),(0,n.jsx)("p",{children:(0,n.jsx)("br",{})}),(0,n.jsxs)("p",{children:["The output is a ",(0,n.jsx)("b",{children:"function"})," that takes a single argument. You provide a value from the domain, and it returns the corresponding value from the range."]}),(0,n.jsx)("p",{children:"Let's create a scale to address the issue with the green circles above!"}),(0,n.jsx)(d.d,{code:"\nimport {scaleLinear} from d3\n\nconst scale = scaleLinear()\n  .domain([0, 100])\n  .range([0, 500]);\n\nconsole.log( scale(82) )\n// 240\n\n      "}),(0,n.jsx)("h2",{children:"Dealing with the Y Axis"}),(0,n.jsx)("p",{children:"By now, working with the X scale should feel intuitive."}),(0,n.jsxs)("p",{children:["However, the Y axis behaves a bit differently. Typically, when a value is ",(0,n.jsx)("b",{children:"high"}),", we expect the corresponding data point to be"," ",(0,n.jsx)("b",{children:"near the top"})," of the SVG area. Conversely, a value close to 0 should appear near the bottom."]}),(0,n.jsxs)("p",{children:["This means the Y scale is essentially inverted! Luckily, we can handle this easily by ",(0,n.jsx)("b",{children:"reversing the order"})," of the range array."]}),(0,n.jsx)("p",{children:"Take a close look at the code below:"}),(0,n.jsx)(d.d,{code:"\nconst yScale = d3.scaleLinear()\n  .domain([0, 100])\n  .range([300, 0]); // Array is inverted! Smallest value will return 300px = bottom of the svg area\n\nconsole.log(yScale(0))    // 300\nconsole.log(yScale(100))  // 0\n"}),(0,n.jsx)("h2",{children:"Exercices"}),(0,n.jsx)(h.v,{localStorageId:e.link,exercises:[{title:(0,n.jsx)("span",{children:"Control bar size with a scale"}),content:(0,n.jsx)(u.q,{exercise:j[0]})},{title:(0,n.jsx)("span",{children:"Three Bars!"}),content:(0,n.jsx)(u.q,{exercise:j[1]})},{title:(0,n.jsx)("span",{children:"Reverse direction"}),content:(0,n.jsx)(u.q,{exercise:j[2]})},{title:(0,n.jsx)("span",{children:"Mirror barplot"}),content:(0,n.jsx)(u.q,{exercise:j[3]})}]}),(0,n.jsx)("h2",{children:"Wouch! \uD83D\uDE05"}),(0,n.jsx)("p",{children:"That was challenging!"}),(0,n.jsx)("p",{children:"Scales are a core concept in D3.js data visualization, which is why we needed so many exercises!"}),(0,n.jsx)("p",{children:"You've mastered the most important part, but we're not done with scales just yet. Let's explore a few other useful scale types!"})]}):null}let j=[{whyItMatters:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("p",{children:"Now that you know what a scale is, time to write your first scale!"})}),toDo:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Create a barplot with 1 bar only."}),(0,n.jsx)("li",{children:"The SVG area is 500px wide. Your dataset goes from 0 to 100."}),(0,n.jsx)("li",{children:"Draw a horizontal bar that goes from the very left, and has a length that represents a value of 82 in the dataset."})]}),practiceSandbox:"exercise/linearScaleBarSizePractice",solutionSandbox:"exercise/linearScaleBarSizeSolution"},{whyItMatters:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("p",{children:"Once a scale is available, everything you draw on your screen will go through it to determine positions!"}),(0,n.jsx)("p",{children:"Also, see how convenient scales are when it comes to adding margins!"})]}),toDo:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Now create 3 bars."}),(0,n.jsx)("li",{children:"Vertical positions are written manually"}),(0,n.jsxs)("li",{children:["Widths must represent the value ",(0,n.jsx)("code",{children:"34"}),", ",(0,n.jsx)("code",{children:"53"})," and"," ",(0,n.jsx)("code",{children:"82"})]}),(0,n.jsxs)("li",{children:["⚠️ You must leave a ",(0,n.jsx)("b",{children:"margin"})," of 20px on the left hand side."]})]}),practiceSandbox:"exercise/linearScaleThreeBarsPractice",solutionSandbox:"exercise/linearScaleThreeBarsSolution"},{whyItMatters:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("p",{children:"Scales are very useful to reverse the direction of drawing"})}),toDo:(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:["Let's draw one single bar that represents the value ",(0,n.jsx)("code",{children:"82"})]}),(0,n.jsx)("li",{children:"But this time, the bar must go from the right to the left."}),(0,n.jsxs)("li",{children:["Hint: reverse the ",(0,n.jsx)("code",{children:"range"})," array!"]})]}),practiceSandbox:"exercise/linearScaleReversePractice",solutionSandbox:"exercise/linearScaleReverseSolution"},{whyItMatters:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("p",{children:["The logic behind each functions of the ",(0,n.jsx)("code",{children:"d3-shape"})," module is the same."]}),(0,n.jsx)("p",{children:"If you have a good understanding of d3.line(), you're on the right way to build any other chart type!"})]}),toDo:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("p",{children:"Let's create a mirror histogram!! The mirror histogram looks like this:"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Create 2 scales!"}),(0,n.jsxs)("li",{children:["Values are ",(0,n.jsx)("code",{children:"23"}),", ",(0,n.jsx)("code",{children:"55"}),", ",(0,n.jsx)("code",{children:"87"})," on the left, and ",(0,n.jsx)("code",{children:"12"}),", ",(0,n.jsx)("code",{children:"43"}),", ",(0,n.jsx)("code",{children:"98"})," on the right"]})]})]}),practiceSandbox:"exercise/linearScaleMirrorPractice",solutionSandbox:"exercise/linearScaleMirrorSolution"}]}},function(e){e.O(0,[2343,7754,7823,9484,8190,3710,4969,9774,2888,179],function(){return e(e.s=81936)}),_N_E=e.O()}]);