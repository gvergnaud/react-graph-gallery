(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2990],{4925:function(t,e,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/ridgeline",function(){return i(444)}])},2450:function(t,e,i){"use strict";i.d(e,{Z:function(){return s}});var a=i(5893);i(7294);var o=i(2050),n=i(9975),r=i(9942);function s(t){let{images:e}=t,i=o.F.filter(t=>e.includes(t.img)).map((t,e)=>(0,a.jsx)(n.X,{link:t.link,title:t.title,description:(0,a.jsx)("p",{children:t.description}),img:t.img,alt:t.alt},e));return(0,a.jsx)(r.E,{children:i})}},9975:function(t,e,i){"use strict";i.d(e,{X:function(){return r}});var a=i(5893),o=i(6395),n=i.n(o);let r=t=>{let{img:e,title:i,description:o,link:r,alt:s}=t;return(0,a.jsxs)("figure",{className:n().container,children:[(0,a.jsx)("img",{src:"/chart/"+e,className:n().image,alt:s}),(0,a.jsxs)("figcaption",{children:[(0,a.jsx)("p",{className:n().title,children:(0,a.jsx)("b",{children:i})}),(0,a.jsx)("div",{className:"font-light",children:o}),(0,a.jsx)("a",{href:r})]})]})}},9942:function(t,e,i){"use strict";i.d(e,{E:function(){return o}});var a=i(5893);i(7294);let o=t=>{let{children:e}=t;return(0,a.jsx)("div",{className:"grid grid-cols-2 sm:grid-cols-3 gap-4",children:e})}},444:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return j}});var a=i(5893),o=i(7294),n=i(153),r=i(9965),s=i(7262),l=i(3572),c=i(1122),d=i(1664),h=i.n(d);let p=[{key:"Almost Certainly",values:[95,95,95,95,98,95,85,97,95,90,90,99,60,88.7,99,95,97,99,95,95,90,92,98,98,90,95,95,98,85,80,98,96,99,85,90,95,98,98,80,95,99,85,90,95,85,95]},{key:"Highly Likely",values:[80,75,85,85,95,99,95,95,95,85,90,97,80,69,98,90,90,95,95,90,80,85,90,92,90,85,90,95,85,15,80,85,85,84,95,85,96,96,90,90,90,80,70,80,90,80]},{key:"Very Good Chance",values:[85,75,85,85,80,85,65,75,80,90,85,70,70,80,85,80,70,75,90,75,80,75,75,91,75,80,80,75,90,74,75,80,75,87,80,80,90,82,70,90,80,80,80,90,75,75]},{key:"Probable",values:[75,51,70,70,70,90,80,70,70,70,70,75,70,51,85,70,51,60,60,80,75,60,80,85,75,75,60,85,60,65,65,75,80,50,70,64,90,75,80,80,90,70,75,75,65,75]},{key:"Likely",values:[66,75,75,75,70,75,40,70,65,75,60,75,60,70,75,70,65,65,80,75,80,70,85,85,65,65,75,90,65,65,70,70,75,60,90,80,90,86,80,90,60,70,70,70,65,60]},{key:"Probably",values:[75,51,70,70,75,75,45,80,80,70,75,75,55,60,65,80,60,75,75,75,75,60,85,85,80,75,60,85,76,65,55,90,90,65,60,80,80,80,80,90,50,70,65,75,60,68]},{key:"We Believe",values:[66,51,80,80,65,80,80,75,65,65,80,90,60,50,5,85,75,80,75,50,60,85,85,70,80,50,60,75,50,60,60,80,50,50,60,75,70,45,70,85,90,65,70,100,95,55]},{key:"Better Than Even",values:[55,51,60,60,60,65,60,55,55,60,60,67,55,5,65,60,51,55,60,50.1,60,57,60,60,60,60,51,98,51,60,55,60,51,60,80,80,53,69,60,55,60,51,60,60,55,51]},{key:"About Even",values:[50,50,50,50,50,50,45,50,50,52,50,50,50,50,50,50,50,50,50,50,50,50,49,50,50,50,50,50,50,50,50,50,50,50,40,50,50,52,50,48,50,45,50,50,50,49]},{key:"We Doubt",values:[40,20,30,30,10,7,45,25,20,60,25,17,20,30,100,30,5,25,25,25,40,25,5,30,12,33,10,40,33,38,25,5,1,60,25,10,40,21,10,15,40,30,15,10,95,25]},{key:"Improbable",values:[20,49,10,10,50,15,35,30,30,20,1,10,5,49,1,40,10,3,10,20,30,33,15,7,25,10,49,7,25,29,20,9,.001,3,3,10,4,12,0,20,20,15,35,5,5,20]},{key:"Unlikely",values:[30,25,25,25,5,8,20,15,35,30,15,10,30,20,10,30,15,15,10,25,10,10,2,18,35,25,20,10,25,36,12,3,10,24,5,25,30,34,20,35,10,35,20,10,20,35]},{key:"Probably Not",values:[15,49,25,25,20,15,40,25,35,45,40,25,30,40,100,40,10,30,20,49.9,25,10,10,27,30,25,40,25,20,34,35,20,10,30,20,20,30,26,30,15,40,30,25,20,40,40]},{key:"Little Chance",values:[20,5,20,20,5,5,20,20,15,20,20,17,10,13,100,15,15,10,25,25,20,7,2,17,20,10,15,10,10,29,15,20,5,20,4,8,8,18,10,15,5,10,5,10,25,17]},{key:"Almost No Chance",values:[5,5,1,1,1,1,10,3,5,10,15,2,5,2,95,1,2,1,5,5,5,3,5,2,2,2,5,2,1,7,1,10,.05,5,2,2,1,7,1,5,1,5,2,1,2,5]},{key:"Highly Unlikely",values:[25,10,5,5,2,3,20,5,15,6,10,3,5,3,90,5,7,5,5,5,5,3,5,3,10,5,20,5,15,15,8,5,10,15,2,5,5,3,10,8,30,15,10,5,5,10]},{key:"Chances Are Slight",values:[25,5,15,15,10,20,30,10,10,25,15,5,15,5,35,10,5,40,10,10,5,13,5,10,20,5,10,5,15,30,15,12,5,30,30,5,10,13,10,10,15,20,10,5,10,15]}];var g=i(7875);let m={top:90,right:30,bottom:60,left:120},u=[-20,120],f=t=>{let{width:e,height:i,data:n}=t,r=(0,o.useRef)(null),s=e-m.right-m.left,l=i-m.top-m.bottom,c=n.map(t=>t.key),d=(0,o.useMemo)(()=>g.BYU().domain(u).range([10,s]).nice(),[n,e]);(0,o.useEffect)(()=>{let t=g.Ys(r.current);t.selectAll("*").remove();let e=g.LLu(d);t.append("g").attr("transform","translate(0,"+(l+20)+")").call(e)},[d,l]);let h=(0,o.useMemo)(()=>{var t;let e=(t=d.ticks(40),function(e){return t.map(function(t){return[t,g.J69(e,function(e){var i;return 1>=Math.abs(i=(t-e)/7)?.75*(1-i*i)/7:0})]})});return n.map(t=>({key:t.key,density:e(t.values)}))},[d,n]),p=Math.max(...h.map(t=>Math.max(...t.density.map(t=>t[1])))),f=g.BYU().domain([0,p]).range([100,0]);var b=g.tiA().domain(c).range([0,l]).paddingInner(1);let w=(0,o.useMemo)(()=>{let t=g.jvg().x(t=>d(t[0])).y(t=>f(t[1])).curve(g.$0Z);return h.map((e,i)=>{let o=t(e.density);return(0,a.jsx)("path",{d:o,transform:"translate(0,"+(b(e.key)-100)+")",fill:"purple",opacity:.8,stroke:"black",strokeWidth:.3,strokeLinejoin:"round"},i)})},[h]),x=(0,o.useMemo)(()=>h.map((t,e)=>(0,a.jsx)("text",{x:-5,y:b(t.key),textAnchor:"end",dominantBaseline:"middle",fontSize:10,children:t.key},e)),[h]);return(0,a.jsxs)("svg",{width:e,height:i,children:[(0,a.jsxs)("g",{width:s,height:l,transform:"translate(".concat([m.left,m.top].join(","),")"),children:[w,x]}),(0,a.jsx)("g",{width:s,height:l,ref:r,transform:"translate(".concat([m.left,m.top].join(","),")")})]})},b=t=>{let{width:e=700,height:i=400}=t;return(0,a.jsx)(f,{width:e,height:i,data:p})};var w=i(505),x=i(7683),k=i(6820),v=i(2450);let y=(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("p",{children:["A"," ",(0,a.jsx)("a",{href:"https://www.data-to-viz.com/graph/ridgeline.html",children:"ridgeline chart"})," ","is a chart type that shows the distribution of a numeric variable for several groups, stacked one of top of each other. This page is a step-by-step guide on how to build your own histogram for the web, using"," ",(0,a.jsx)("a",{href:"https://reactjs.org/",children:"React"})," and"," ",(0,a.jsx)("a",{href:"https://d3-graph-gallery.com/ridgeline.html",children:"D3.js"}),"."]}),(0,a.jsxs)("p",{children:["It starts by describing how the ",(0,a.jsx)("b",{children:"data"})," should be organized and how to initialize the ",(0,a.jsx)("b",{children:"ridgeline component"}),". It then quickly recalls how to compute and draw a ",(0,a.jsx)(h(),{href:"density-plot",children:"kernel density"}),", and shows how to ",(0,a.jsx)("b",{children:"stack"})," this information for several groups of a dataset. \uD83D\uDE47‍♂️."]})]});function j(){return(0,a.jsxs)(n.A,{title:"Ridgeline chart with React",seoDescription:"How to build a ridgeline plot with React and D3.js. A set of re-usable components coming with explanation and code.",children:[(0,a.jsx)(r.Z,{title:(0,a.jsxs)("h1",{children:["Ridgeline chart"," ",(0,a.jsx)("span",{className:"text-gray-600 font-light hidden sm:inline",children:"with React"})]}),description:y,chartType:"ridgeline"}),(0,a.jsx)("h2",{id:"data",children:"The Data"})," ",(0,a.jsxs)("p",{children:["To build a ridgeline chart, the input dataset must provide a set of",(0,a.jsx)("b",{children:"numeric values"})," for several groups."]}),(0,a.jsxs)("p",{children:["The best way to format this kind of information is with an"," ",(0,a.jsx)("b",{children:"array of object"}),". Each object represents a group. A",(0,a.jsx)("code",{children:"group"})," property provides the group name, and a"," ",(0,a.jsx)("code",{children:"values"})," property provides the values."]}),(0,a.jsx)("br",{}),(0,a.jsx)("p",{children:"Here is a minimal example of the data structure:"}),(0,a.jsx)(l.d,{code:P}),(0,a.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,a.jsxs)("p",{children:["The goal here is to create a ",(0,a.jsx)("code",{children:"Ridgeline"})," component that will be stored in a ",(0,a.jsx)("code",{children:"Ridgeline.tsx"})," file. This component requires 3 props to render: a ",(0,a.jsx)("code",{children:"width"}),", a ",(0,a.jsx)("code",{children:"height"}),", and some"," ",(0,a.jsx)("code",{children:"data"}),"."]}),(0,a.jsxs)("p",{children:["The shape of the ",(0,a.jsx)("code",{children:"data"})," is described above. The"," ",(0,a.jsx)("code",{children:"width"})," and ",(0,a.jsx)("code",{children:"height"})," will be used to render an"," ",(0,a.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the histogram."]}),(0,a.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our"," ",(0,a.jsx)("code",{children:"Ridgeline"})," component:"]}),(0,a.jsx)(l.d,{code:B}),(0,a.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the SVG ",(0,a.jsx)("code",{children:"circle"}),", but it's React that will render them in the ",(0,a.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,a.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,a.jsx)("a",{href:"https://www.d3-graph-gallery.com",children:"d3.js examples"}),"."]}),(0,a.jsx)("h2",{id:"kernel density",children:"Computing and plotting a density"}),(0,a.jsxs)("p",{children:["A ridgeline chart is a set of"," ",(0,a.jsx)(h(),{href:"density-plot",children:"density plots"}),", stacked one on top of each other. It is thus important to start by learning how to compute a"," ",(0,a.jsx)(h(),{href:"density-plot#kernel%20density",children:"kernel density"}),", and how to transform it in a SVG ",(0,a.jsx)("code",{children:"path"})," rendered with react."]}),(0,a.jsxs)("p",{children:["The ",(0,a.jsx)(h(),{href:"/density-plot",children:"density chart"})," section of the gallery thoroughly explains how to compute this"," ",(0,a.jsx)("a",{href:"https://en.wikipedia.org/wiki/Kernel_density_estimation",children:"density"})," ","estimation for a set of numeric values."]}),(0,a.jsx)("p",{children:"This is how the result looks like:"}),(0,a.jsx)(c.$,{VizComponent:x.p,vizName:"DensityChartWithAxis",maxWidth:600,height:400,caption:"A ridgeline chart is a set of densities stacked one on top of each other. This minimal example shows how to compute and plot this density for a single group."}),(0,a.jsx)("h2",{id:"stacking",children:"Stacking the densities"}),(0,a.jsx)("h3",{children:"→ Two Y scales"}),(0,a.jsx)("p",{children:"It's important to understand that 2 Y scales are necessary to compute a ridgeline chart."}),(0,a.jsxs)("p",{children:["The first one is used many times, to compute each density. It's a"," ",(0,a.jsx)("code",{children:"scaleLinear"})," scale."]}),(0,a.jsxs)("p",{children:["The second is used once to shift each group baseline and create the slight overlap. It's a ",(0,a.jsx)("code",{children:"scaleBand"}),": each band of the Y axis is dedicated to a group."]}),(0,a.jsxs)("p",{children:["You can read more about"," ",(0,a.jsx)("a",{href:"https://d3-graph-gallery.com/graph/custom_axis.html",children:"scales and axes"}),"."]}),(0,a.jsx)("h3",{children:"→ Axis"}),(0,a.jsxs)("p",{children:["It's important to display a X axis to understand what we are looking at. In the example below the ",(0,a.jsx)("code",{children:"axisBottom"})," imperative method of d3 is used in a ",(0,a.jsx)("code",{children:"useEffect"})," hook, but you can definitely create the axis using react like suggested"," ",(0,a.jsx)(h(),{href:"/build-axis-with-react",children:"here"}),"."]}),(0,a.jsxs)("p",{children:["For the Y axis labels, I suggest to add them using some"," ",(0,a.jsx)("code",{children:"text"})," svg elements."]}),(0,a.jsx)(c.$,{VizComponent:b,vizName:"RidgelineBasic",maxWidth:800,height:600,caption:(0,a.jsxs)("span",{children:["A ridgeline chart showing how various probability related words are perceived by humans. (",(0,a.jsx)("a",{href:"https://www.data-to-viz.com/graph/ridgeline.html",children:"more"}),")"]})}),(0,a.jsx)(w.r,{chartId:"ridgeline"}),(0,a.jsx)(k.Z,{chartId:"ridgeline"}),(0,a.jsx)("h2",{id:"variations",children:"Variations"}),(0,a.jsxs)("p",{children:["Ridgeline charts are not the only way to ",(0,a.jsx)("b",{children:"compare the distribution"})," ","of several groups in a dataset. ",(0,a.jsx)(h(),{href:"boxplot",children:"Boxplots"}),","," ",(0,a.jsx)(h(),{href:"violin-plot",children:"violins"}),","," ",(0,a.jsx)(h(),{href:"histogram",children:"histograms"})," and"," ",(0,a.jsx)(h(),{href:"density-plot",children:"densities"})," are variations that could interst you in order to solve this goal. Check the examples below to get the code."," "]})," ",(0,a.jsx)(v.Z,{images:["boxplot-jitter.png","violinBasic.png","boxplotBasic.png","histogram-small-multiple.png","histogram-with-several-groups.png","densityMultipleGroups.png"]}),(0,a.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,a.jsx)(s.Z,{chartFamily:"distribution"}),(0,a.jsx)("div",{className:"mt-20"})]})}let P='\nexport const data = [\n  {\n    group: "A",\n    values: [0, 0, 2, 2, 2, 0, 0, 1],\n  },\n  {\n    group: "B",\n    values: [19, 20, 19, 18, 18],\n  }\n];\n'.trim(),B='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype RidgelineProps = {\n  width: number;\n  height: number;\n  data: number[];\n};\n\nexport const Ridgeline = ({ width, height, data }: RidgelineProps) => {\n\n  // read the data\n  // build the scales\n  // compute kernel densities for each group\n  // build all shapes\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render all the shapes\n      </svg>\n    </div>\n  );\n};\n'.trim()},2050:function(t,e,i){"use strict";i.d(e,{F:function(){return a}});let a=[{link:"/scatter-plot#scales%20and%20axes",title:"Scales and axes",description:"How to map your data in a 2d space, and how to draw the axes",img:"axis-basic-demo.png",alt:"Picture of an empty chart area with X and Y axes"},{link:"/scatterplot",title:"Scatterplot Hover effect",description:"How to add a hover effect to highlight a group on a scatterplot",img:"scatterplotHoverEffect.gif",alt:"GIF of a scatterplot with hover effect"},{link:"/scatter-plot#circles",title:"Basic scatter plot",description:"Add circles to get a basic scatter plot",img:"scatterplot-most-basic.png",alt:"Most basic scatterplot made with react and d3"},{link:"/scatter-plot#tooltip",title:"Add tooltip",description:"Get more details about each datapoint by adding a tooltip on hover",img:"scatterplot-tooltip.png",alt:"Scatterplot with tooltip made with react and d3"},{link:"/scatter-plot#hover%20effect",title:"Add a hover effect",description:"Highlight a specific group on hover",img:"scatterplot-hover-effect.png",alt:"Scatterplot with hover effect made with react and d3"},{link:"/scatter-plot#real%20life",title:"Real life use-case",description:"Reproduction of a data wrapper chart representing countries CO2 data",img:"scatterplot-co2.png",alt:"Real life example of a scatterplot made with react and d3"},{link:"/example/scatterplot-tooltip-with-voronoi-for-closest-point-detection",title:"Closest point detection with Voronoi",description:"Using a voronoi diagram in the scatterplot background is a smart way to efficiently find the mouse closest point",img:"scatterplot-tooltip-with-voronoi-for-closest-point-detection.gif",alt:"gif of a scatterplot with voronoi diagram for closest point detection"},{link:"/example/scatterplot-basic-canvas",title:"Scatterplot in Canvas",description:"Learn how to render a scatterplot in canvas to improve performances",img:"scatterplot-basic-canvas.png",alt:"a scatterplot made with react and rendered in canvas"},{link:"/heatmap",title:"Basic heatmap",description:"Most basic heatmap",img:"heatmapBasic.png",alt:"Picture of a simple heatmap made with react and d3.js"},{link:"/heatmap#tooltip",title:"Heatmap with tooltip",description:"Learn how to add a tooltip to a heatmap with react",img:"heatmapTooltip.png",alt:"Picture of a heatmap with a tooltip that appears on hover"},{link:"/heatmap#legend",title:"Continuous color scale",description:"How to add a color legend to your chart that uses a continuous color scale",img:"continuousColorLegend.png",alt:"Picture of a continuous color scale built with d3.js"},{link:"/heatmap#application",title:"Vaccination heatmap",description:"Reproduction of a famous vaccination heatmap using d3 and react",img:"heatmapVaccination.png",alt:"Picture of a heatmap showing the effect of vaccination, built with react and d3"},{link:"/correlogram",title:"Basic correlogram",description:"Learn how to build a correlogram with react and d3",img:"correlogramBasic.png",alt:"Picture of a correlogram built with react and d3"},{link:"/bubble-plot",title:"Bubble plot",description:"Learn how to build a bubble plot with react and d3.js",img:"bubble-plot-with-legend.png",alt:"Picture of a simple bubble plot with a legend made with react and d3.js"},{link:"/bubble-plot#transition",title:"Bubble plot data set transition",description:"How to smoothly animate the transition between dataset",img:"bubble-plot-dataset-transition.gif",alt:"GIF of a bubble plot smoothly transitioning data"},{link:"/2d-density-plot",title:"Hexbin chart",description:"A hexbin chart split the figure in hexagons to show a 2d density",img:"2d-density-plot.png",alt:"Picture of a hexbin chart made with React and d3.js"},{link:"/connected-scatter-plot",title:"Simple connected scatterplot",description:"A very simple connected scatter plot showing the evolution of 1 numeric variable",img:"connected-scatterplot-basic.png",alt:"Picture of a connected scatter plot made with React and d3.js"},{link:"/example/boxplot-jitter",title:"Boxplot with jitter",description:"Add individual data points using jitter on top of the boxplot",img:"boxplot-jitter.png",alt:"Picture of a boxplot with jitter built using react and d3.js"},{link:"/boxplot#box%20component",title:"Boxplot shape",description:"How to build a boxplot shape in SVG",img:"boxplotShape.png",alt:"Picture of a box component, allowing to build a boxplot later on"},{link:"/boxplot",title:"Basic boxplot",description:"How to build a basic boxplot with react",img:"boxplotBasic.png",alt:"Picture of a basic boxplot built with react and d3"},{link:"/histogram",title:"Histogram",description:"Learn how to build a histogram with react and d3.js",img:"histogram-basic.png",alt:"Picture of a simple histogram made with react and d3.js"},{link:"/histogram#transition",title:"Histogram dataset transition",description:"How to animate the transition between datasets",img:"histogram-dataset-transition.gif",alt:"GIF of a histogram with animated data transition"},{link:"/example/histogram-mirror",title:"Mirror histogram",description:"Create a mirror histogram to compare the distribution of 2 groups in a dataset",img:"histogram-mirror.png",alt:"picture of a mirror histogram made with react and d3.js"},{link:"/example/histogram-small-multiple",title:"Small multiple",description:"Create one panel per group to show its distribution separately",img:"histogram-small-multiple.png",alt:"Picture of a histogram with small multiple built with react and d3.js"},{link:"/example/histogram-with-several-groups",title:"Multiple groups",description:"A histogram with <b>multiple</b> groups displayed on the same axis.",img:"histogram-with-several-groups.png",alt:"Picture of a histogram with multiple groups built with react and d3.js"},{link:"/violin-plot",title:"Violin to Boxplot transition",description:"Using shape morphism to smoothly transition from a boxplot to a violin and reverse",img:"violinBoxplotTransition.png",alt:"gif of a violin plot smoothly transitioning to a boxplot using shape morphism"},{link:"/violin-plot#bucket%20size",title:"Bucket size effect",description:"Interactive example showing the bucket size effect on a violin chart",img:"violin-bucket-size-effect.gif",alt:"GIF showing a violin plot with varying bucket size"},{link:"/violin-plot#violin%20component",title:"Violin shape",description:"How to build the shape of a violin with SVG",img:"violinShape.png",alt:"Picture of a violin shape built with react and d3"},{link:"/violin-plot",title:"Boxplot to Violin plot",description:"Interactive example showing the difference between a boxplot and a violin",img:"boxplot-violin-transition.gif",alt:"GIF showing a mirror transition between a boxplot and a violin plot"},{link:"/violin-plot",title:"Basic violin plot",description:"Learn how to build a basic violin chart with d3 and react",img:"violinBasic.png",alt:"Picture of a basic violin chart built in react"},{link:"/violin-plot#bucket%20size",title:"Violin with variable bucket size",description:"A violin plot with a slider to change the bucket size in use",img:"violinBucketSize.png",alt:"Picture of a violin plot with variable bucket size"},{link:"/barplot",title:"Basic barplot",description:"Most basic barplot built with React and d3",img:"barplot-basic.png",alt:"Picture of a horizontal barplot made with React and d3"},{link:"/example/barplot-data-transition-animation",title:"Barplot dataset transition",description:"How to smoothly animate the transition between dataset",img:"barplotDatasetAnimation.gif",alt:"GIF of a data update on a React barplot"},{link:"/example/barplot-stacked-horizontal",title:"Horizontal Stacked Barplot",description:"Represent group and subgroup values by stacking the data",img:"barplot-stacked-horizontal.png",alt:"Picture of a stacked barchart made with react and d3"},{link:"/example/barplot-stacked-vertical",title:"Vertical Stacked Barplot",description:"Represent group and subgroup values by stacking the data",img:"barplot-stacked-vertical.png",alt:"Picture of a vertical stacked barchart made with react and d3"},{link:"/density-plot",title:"Basic density plot",description:"Most basic density plot built with React and d3",img:"densityBasic.png",alt:"Picture of a basic density plot built with React and d3"},{link:"/density-plot#variations",title:"Density plot with multiple groups",description:"How to add several groups on the same density plot",img:"densityMultipleGroups.png",alt:"Picture of a density plot with multiple groups"},{link:"/ridgeline",title:"Basic ridgeline chart",description:"Most basic version of a ridgeline plot",img:"ridgelineBasic.png",alt:"Picture of a basic ridgeline chart built with react and d3"},{link:"/line-chart#basic",title:"Most basic line chart",description:"The most basic line chart one can make using d3 and react",img:"line-chart-basic.png",alt:"Picture of a very simple line chart made with react and d3"},{link:"/line-chart#transition",title:"Line chart with dataset transition",description:"How to smoothly animate the transition between 2 dataset on a line chart",img:"line-chart-data-transition.gif",alt:"GIF of a line chart that animates between 2 dataset"},{link:"/area-plot",title:"Basic Area Chart",description:"Most basic version of an area chart made with react and d3.js",img:"area-chart-basic.png",alt:"Picture of a basic area chart made with React and D3"},{link:"/stacked-area-plot",title:"Basis stacked area chart",description:"Most basic version of a stacked area chart. Explains how to use the stack() function of d3.js",img:"stacked-area-plot-basic.png",alt:"picture of a basic stacked area plot made with react"},{link:"/streamchart",title:"Basic Streamgraph",description:"Most basic streamgraph one can build using d3 and react",img:"streamgraph-basic.png",alt:"Picture of a basic streamgraph made using Reacrt and d3.js"},{link:"/streamchart#hover&effect",title:"Streamgraph with hover effect",description:"How to add a hover effect on a streamgraph to highlight a group",img:"streamgraph-hover-effect.gif",alt:"GIF of a streamgraph react component that supports hover effect"},{link:"/streamchart#transition",title:"Offset and Smoothing transition",description:"An interactive streamgraph example showing how to animate transition between the chart stacking features.",img:"streamgraph-offset-type-transition.gif",alt:"GIF of a streamgraph"},{link:"/streamchart#application",title:"Streamgraph application",description:"Streamgraph with a slider to zoom on a time stamp and with interactive inline legends",img:"streamgraph-application.gif",alt:"GIF of a streamgraph with multiple interactive features"},{link:"/circular-packing",title:"Most basic circular packing chart",description:"The most basic circular packing chart one can make using d3.js and React.",img:"circle-pack-basic.png",alt:"Picture of a very basic circle packing chart"},{link:"/circular-packing",title:"Circular packing: 2 levels of hierarchy",description:"A simple circular packing chart with 2 levels of hierarchy built with React and d3.",img:"circle-pack-2-levels.png",alt:"Picture of a very basic circle packing chart with 2 levels of hierarchy"},{link:"/example/circle-packing-with-d3-force",title:"Circle Pack with d3-force",description:"Another approach to build a circle packing chart using physical forces to compute node positions.",img:"circle-pack-d3-force.png",alt:"Picture of a circle packing chart made using the d3-force plugin"},{link:"/example/arc-diagram-vertical",title:"Vertical arc diagram",description:"The vertical version of the arc diagram is more convenient to display labels",img:"vertical-arc-diagram.png",alt:"Picture of a vertical arc diagram"},{link:"/network-chart#rendering",title:"Most basic network chart",description:"Most basic network chart using the d3-force plugin to apply physical forces.",img:"network-chart-basic.png",alt:"Picture of a very simple network chart built with React and D3.js."},{link:"/network-chart#rendering",title:"Play with forces",description:"A playground to discover the effect of the various forces you can apply to your particles",img:"network-chart-force-playground.png",alt:"Picture of a playground allowing to play with the various d3 forces"},{link:"/example/network-diagram-with-colored-groups",title:"Force directed graph",description:"A force directed network chart showing character co-occurence in les miserables",img:"network-les-miserables.png",alt:"Picture of a force directed network chart showing character co-occurence in les miserables"}]},6395:function(t){t.exports={container:"graphLinkImage_container__vhwty",title:"graphLinkImage_title__zwMK0"}}},function(t){t.O(0,[3996,7875,5660,645,1188,8986,9774,2888,179],function(){return t(t.s=4925)}),_N_E=t.O()}]);