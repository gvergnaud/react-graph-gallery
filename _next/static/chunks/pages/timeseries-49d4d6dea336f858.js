(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7007],{7726:function(t,e,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/timeseries",function(){return i(1323)}])},2450:function(t,e,i){"use strict";i.d(e,{Z:function(){return s}});var a=i(5893);i(7294);var r=i(2050),o=i(9975),n=i(9942);function s(t){let{images:e}=t,i=r.F.filter(t=>e.includes(t.img)).map((t,e)=>(0,a.jsx)(o.X,{link:t.link,title:t.title,description:(0,a.jsx)("p",{children:t.description}),img:t.img,alt:t.alt},e));return(0,a.jsx)(n.E,{children:i})}},9975:function(t,e,i){"use strict";i.d(e,{X:function(){return n}});var a=i(5893),r=i(6395),o=i.n(r);let n=t=>{let{img:e,title:i,description:r,link:n,alt:s}=t;return(0,a.jsxs)("figure",{className:o().container,children:[(0,a.jsx)("img",{src:"/chart/"+e,className:o().image,alt:s}),(0,a.jsxs)("figcaption",{children:[(0,a.jsx)("p",{className:o().title,children:(0,a.jsx)("b",{children:i})}),(0,a.jsx)("div",{className:"font-light",children:r}),(0,a.jsx)("a",{href:n})]})]})}},9942:function(t,e,i){"use strict";i.d(e,{E:function(){return r}});var a=i(5893);i(7294);let r=t=>{let{children:e}=t;return(0,a.jsx)("div",{className:"grid grid-cols-2 sm:grid-cols-3 gap-4",children:e})}},1323:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return B}});var a=i(5893),r=i(7294),o=i(153),n=i(9965),s=i(7262),l=i(3572),c=i(1122),h=i(1664),d=i.n(h),p=i(88),m=i(7875);let g=t=>{let{width:e,height:i}=t;return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("defs",{children:(0,a.jsx)("pattern",{id:"pattern_rkDsm",patternUnits:"userSpaceOnUse",width:"9.5",height:"2.5",patternTransform:"rotate(41)",children:(0,a.jsx)("line",{x1:"0",y:"0",x2:"0",y2:"9.5",stroke:"#D9B9F3",strokeWidth:"1"})})}),(0,a.jsx)("rect",{width:e,height:i,fill:"url(#pattern_rkDsm)",opacity:"1"})]})},u={top:30,right:30,bottom:50,left:50},f=t=>{let{width:e,height:i}=t,o=(0,r.useRef)(null),n=e-u.right-u.left,s=i-u.top-u.bottom,l=new Date("2020-12-01"),c=new Date("2023-06-01"),h=m.Xf().domain([l,c]).range([0,n]),d=(0,r.useMemo)(()=>m.BYU().domain([0,10]).range([s,0]),[i]);return(0,r.useEffect)(()=>{let t=m.Ys(o.current);t.selectAll("*").remove();let e=m.LLu(h);t.append("g").attr("transform","translate(0,"+s+")").call(e.ticks(8));let i=m.y4O(d);t.append("g").call(i)},[h,d,s]),(0,a.jsx)("div",{children:(0,a.jsxs)("svg",{width:e,height:i,style:{display:"inline-block"},children:[(0,a.jsx)("g",{width:n,height:s,transform:"translate(".concat([u.left,u.top].join(","),")"),children:(0,a.jsx)(g,{width:n,height:s})}),(0,a.jsx)("g",{width:n,height:s,ref:o,transform:"translate(".concat([u.left,u.top].join(","),")")})]})})},x=t=>{let{width:e=700,height:i=400}=t;return(0,a.jsx)(f,{width:e,height:i})};var b=i(7032),w=i(6438);let v=[{x:"2023-01-01",y:90},{x:"2023-02-01",y:12},{x:"2023-03-01",y:34},{x:"2023-04-01",y:53},{x:"2023-05-01",y:52},{x:"2023-06-01",y:9},{x:"2023-07-01",y:18},{x:"2023-08-01",y:78},{x:"2023-09-01",y:28},{x:"2023-12-01",y:34}],j={top:30,right:30,bottom:50,left:50},y=t=>{let{width:e,height:i,data:o}=t,n=(0,r.useRef)(null),s=e-j.right-j.left,l=i-j.top-j.bottom,c=m.Fp7(o,t=>t.y),h=m.BYU().domain([0,c||0]).range([l,0]),d=m.Z1g("%Y-%m-%d"),p=o.map(t=>d(t.x)).filter(t=>t instanceof Date),g=m.Wem(p),u=m.Xf().domain(g).range([0,s]);(0,r.useEffect)(()=>{let t=m.Ys(n.current);t.selectAll("*").remove();let e=m.LLu(u);t.append("g").attr("transform","translate(0,"+l+")").call(e);let i=m.y4O(h);t.append("g").call(i)},[u,h,l]);let f=m.jvg().x(t=>u(d(t.x))).y(t=>h(t.y)),x=f(o);return x?(0,a.jsx)("div",{children:(0,a.jsxs)("svg",{width:e,height:i,children:[(0,a.jsx)("g",{width:s,height:l,transform:"translate(".concat([j.left,j.top].join(","),")"),children:(0,a.jsx)("path",{d:x,opacity:1,stroke:"#9a6fb0",fill:"none",strokeWidth:2})}),(0,a.jsx)("g",{width:s,height:l,ref:n,transform:"translate(".concat([j.left,j.top].join(","),")")})]})}):null},k=t=>{let{width:e=700,height:i=400}=t;return(0,a.jsx)(y,{data:v,width:e,height:i})};var P=i(2450);let z=(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("p",{children:["This section does not target a specific chart type, even though timeseries are often represented as ",(0,a.jsx)(d(),{href:"/line-chart",children:"line"})," charts or"," ",(0,a.jsx)(d(),{href:"/area",children:"area"})," charts."]}),(0,a.jsxs)("p",{children:["Instead, it provides a tips and tricks to deal with charts that represent the evolution in ",(0,a.jsx)("b",{children:"time"})," of a numeric variable. For instance, it provides hints on how to deal with ",(0,a.jsx)("b",{children:"dates"}),", how to ",(0,a.jsx)("b",{children:"pan"})," on a chart and more"]})]});function B(){return(0,a.jsxs)(o.A,{title:"Timeseries| The React Graph Gallery",seoDescription:"How to deal with timeseries with React and D3.js. A set of re-usable components coming with editable code and explanations.",children:[(0,a.jsx)(n.Z,{title:"Timeseries",description:z,chartType:"timeseries"}),(0,a.jsx)("h2",{id:"chart types",children:"Useful chart types"})," ",(0,a.jsxs)("p",{children:["This page is ",(0,a.jsx)("b",{children:"not"})," about a specific chart type. Instead it provides hints on how to deal with ",(0,a.jsx)("b",{children:"time"}),"."]}),(0,a.jsx)("p",{children:"Check the graph sections that are used to visualize timeseries below if there is a specific chart type you want to make."}),(0,a.jsx)("br",{}),(0,a.jsx)(P.Z,{images:["line-chart-basic.png","heatmapBasic.png","streamgraph-basic.png"]}),(0,a.jsx)("h2",{id:"date format",children:"The Date format"})," ",(0,a.jsxs)("p",{children:["The first struggle when dealing with timeseries is to work with the"," ",(0,a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",children:"javascript Date format"}),". A ",(0,a.jsx)("code",{children:"Date"})," represents a single moment in time and is usually stored as a ",(0,a.jsx)("code",{children:"string"})," in the input dataset."]}),(0,a.jsxs)("p",{children:["Here is an ",(0,a.jsx)("b",{children:"FAQ"})," about the ",(0,a.jsx)("code",{children:"Date"})," format. I constantly forget how this works and come back here for reference. Note that it heavily relies on the"," ",(0,a.jsx)("a",{href:"https://github.com/d3/d3-time-format",children:"d3-time-format module"})," ","that provides great helpers."]}),(0,a.jsxs)(p.U,{startOpen:!1,title:(0,a.jsxs)("span",{children:["Transform a ",(0,a.jsx)("b",{children:"string"})," into a ",(0,a.jsx)("b",{children:"date"})]}),children:[(0,a.jsxs)("p",{children:["In your dataset, the date of each data point is probably stored as a string, like ",(0,a.jsx)("code",{children:"2015-06-01"})," for instance."]}),(0,a.jsxs)("p",{children:["In order to manipulate and plot those dates, you need to transform it into a"," ",(0,a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",children:"javascript date format"}),"."]}),(0,a.jsx)(l.d,{code:T})]}),(0,a.jsxs)(p.U,{startOpen:!1,title:(0,a.jsxs)("span",{children:["Transform a ",(0,a.jsx)("b",{children:"date"})," into a ",(0,a.jsx)("b",{children:"string"})]}),children:[(0,a.jsxs)("p",{children:["Once you have a timestamp at the ",(0,a.jsx)("code",{children:"Date"})," format, you might want to display it on the screen using a specific format."]}),(0,a.jsx)(l.d,{code:D})]}),(0,a.jsxs)(p.U,{startOpen:!1,title:(0,a.jsxs)("span",{children:["What is the ",(0,a.jsx)("b",{children:"current date"})]}),children:[(0,a.jsxs)("p",{children:["You can use the ",(0,a.jsx)("code",{children:"Date.now()"})," function. Note that the date is returned as a ",(0,a.jsx)("code",{children:"number"}),"."]}),(0,a.jsx)(l.d,{code:F})]}),(0,a.jsx)("h2",{id:"time axis",children:"Building a time axis"}),(0,a.jsxs)("p",{children:["A very common task when it comes to build timeseries viz is to draw a"," ",(0,a.jsx)("b",{children:"time axis"}),". Fortunately, d3 has amazing helper functions allowing to create and draw temporal scales."]}),(0,a.jsxs)("p",{children:["All the magic is stored in the ",(0,a.jsx)("code",{children:"d3-scale"})," module, and more precisely in the"," ",(0,a.jsx)("a",{href:"https://github.com/d3/d3-scale#scaleTime",children:"scaleTime"})," ","function."]}),(0,a.jsx)("p",{children:"Building a time scale can be summarized as follow:"}),(0,a.jsx)(l.d,{code:S}),(0,a.jsxs)("p",{children:["Following this code block ",(0,a.jsx)("code",{children:"xScale"})," is a function. You give it a ",(0,a.jsx)("code",{children:"Date"}),", it returns a ",(0,a.jsx)("code",{children:"position in pixels"})]}),(0,a.jsxs)("p",{children:[" ","You can finally use this scale to draw the X axis using your favorite method:"]}),(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"create your own react component"}),(0,a.jsxs)("li",{children:["call ",(0,a.jsx)("code",{children:"d3.axisBottom()"})," in a ",(0,a.jsx)("code",{children:"useEffect"})]})]}),(0,a.jsxs)("p",{children:["I'm preparing a full post on axes with d3 and react,"," ",(0,a.jsx)(d(),{href:"/subscribe",children:"subscribe"})," to the newsletter if you want to be notified when it's out!"]}),(0,a.jsx)(w.J,{size:"sm",href:"/subscribe",isFilled:!0,children:"More on axes"}),(0,a.jsx)(c.$,{vizName:"AxisTimeD3",VizComponent:x,height:250,maxWidth:600,caption:"A basic time axis build with d3.js and react."}),(0,a.jsxs)("p",{children:[(0,a.jsx)("code",{children:"d3"})," is very smart at picking the ",(0,a.jsx)("b",{children:"right label format"}),". If you're dealing with a very long period of time (years), it will display years. If you're dealing with a month, it will display days. And so on. It is very convenient. The logic controlling this formatting is provided ",(0,a.jsx)("a",{href:"https://gist.github.com/mbostock/4149176",children:"here"}),"."]}),(0,a.jsxs)("p",{children:["Note that you can ",(0,a.jsx)("b",{children:"customize"})," how dates are formatted along the X axis thanks to the ",(0,a.jsx)("code",{children:"tickFormat"})," function."]}),(0,a.jsx)("h2",{id:"line chart",children:"Line chart application"}),(0,a.jsxs)("p",{children:["If you already understood the content of the"," ",(0,a.jsx)(d(),{href:"line-chart",children:"line chart section"})," of the gallery, you just have to use a ",(0,a.jsx)("code",{children:"scaleTime"})," instead of a"," ",(0,a.jsx)("code",{children:"scaleLinear"})," and that's it, you have your first"," ",(0,a.jsx)("b",{children:"timeseries"})," visualization. \uD83D\uDE0B"]}),(0,a.jsx)(w.J,{size:"sm",href:"/line-chart",isFilled:!0,children:"Line chart section"}),(0,a.jsx)(c.$,{vizName:"LineChartDatasetTransition",VizComponent:k,height:300,maxWidth:900,caption:"A first timeseries line chart made thanks to the scaleTime function of d3."}),(0,a.jsx)("h2",{id:"synced cursor",children:"Synchronized cursor"}),(0,a.jsxs)("p",{children:["Another pretty common task when dealing with timeseries is to add a"," ",(0,a.jsx)("b",{children:"synchronized cursor"})," on all charts."]}),(0,a.jsxs)("p",{children:["This makes the dashboard more ",(0,a.jsx)("b",{children:"insightful"}),": hovering over an interesting part of a chart reveals where the timestamp is localized on other charts ",(0,a.jsx)("b",{children:"instantly"}),"."]}),(0,a.jsxs)("p",{children:["The implementation required to build a shared state between all charts of the webpage. Hovering a specific chart will update this state and thus update all other plots. This process is extensively described in this"," ",(0,a.jsx)(d(),{href:"/example/line-chart-synchronized-cursors",children:"synchronized cursor for timeseries"})," ","post."," "]}),(0,a.jsx)(w.J,{href:"/example/line-chart-synchronized-cursors",isFilled:!0,size:"sm",children:"Read full post"}),(0,a.jsx)(c.$,{vizName:"LineChartSyncCursor",VizComponent:b.e,height:300,maxWidth:900,caption:"Hover over a chart to see a cursor on both of them, easing the time comparison."}),(0,a.jsx)("h2",{id:"gallery",children:"Gallery of timeseries example"}),(0,a.jsxs)("p",{children:["On top of the generic use-cases presented above, here is a gallery of chart examples involving ",(0,a.jsx)("b",{children:"timeseries"})," visualization:"]}),(0,a.jsx)("br",{}),(0,a.jsx)(P.Z,{images:["timeseries-moving-average.png"]}),(0,a.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,a.jsx)(s.Z,{chartFamily:"evolution"}),(0,a.jsx)("div",{className:"mt-20"})]})}let T='\n// import the timeParse function from d3\nimport { timeParse } from "d3";\n\n// create a time parser function that works for our time format\nconst customTimeParser = timeParse("%Y-%m-%d");\n\n// convert a string into a date\nconst string = "2015-06-01"\nconst date = customTimeParser(string)\n\n// console.log(date)\n// Mon Jun 01 2015 00:00:00 GMT+0200 (Central European Summer Time)\n}\n'.trim(),D='\n// import the timeParse function from d3\nimport { timeFormat } from "d3";\n\n// create a time parser function that works for our time format\nconst customTimeFormatter = timeFormat("%B %d, %Y");\n\n// convert a string into a date\nconst date = new Date\nconst string = customTimeFormatter(date)\n\n// console.log(string)\n// "June 30, 2015"\n}\n'.trim(),F="\nconst now = Date.now()\n\n// console.log(now)\n// 1685004151406\n\nconst nowInDateFormat = new Date(now)\n\n// console.log(nowInDateFormat)\n// Thu May 25 2023 10:42:31 GMT+0200 (Central European Summer Time)\n}\n".trim(),S='\n// Start and end of the axis must be in the Date format\nconst start = new Date("2020-12-01");\nconst end = new Date("2023-06-01");\n\n// Use scaleTime() to create a time scale\nconst xScale = d3.scaleTime()\n  .domain([start, end])\n  .range([0, width]);\n'.trim()},2050:function(t,e,i){"use strict";i.d(e,{F:function(){return a}});let a=[{link:"/scatter-plot#scales%20and%20axes",title:"Scales and axes",description:"How to map your data in a 2d space, and how to draw the axes",img:"axis-basic-demo.png",alt:"Picture of an empty chart area with X and Y axes"},{link:"/scatterplot",title:"Scatterplot Hover effect",description:"How to add a hover effect to highlight a group on a scatterplot",img:"scatterplotHoverEffect.gif",alt:"GIF of a scatterplot with hover effect"},{link:"/scatter-plot#circles",title:"Basic scatter plot",description:"Add circles to get a basic scatter plot",img:"scatterplot-most-basic.png",alt:"Most basic scatterplot made with react and d3"},{link:"/scatter-plot#tooltip",title:"Add tooltip",description:"Get more details about each datapoint by adding a tooltip on hover",img:"scatterplot-tooltip.png",alt:"Scatterplot with tooltip made with react and d3"},{link:"/scatter-plot#hover%20effect",title:"Add a hover effect",description:"Highlight a specific group on hover",img:"scatterplot-hover-effect.png",alt:"Scatterplot with hover effect made with react and d3"},{link:"/scatter-plot#real%20life",title:"Real life use-case",description:"Reproduction of a data wrapper chart representing countries CO2 data",img:"scatterplot-co2.png",alt:"Real life example of a scatterplot made with react and d3"},{link:"/example/scatterplot-tooltip-with-voronoi-for-closest-point-detection",title:"Closest point detection with Voronoi",description:"Using a voronoi diagram in the scatterplot background is a smart way to efficiently find the mouse closest point",img:"scatterplot-tooltip-with-voronoi-for-closest-point-detection.gif",alt:"gif of a scatterplot with voronoi diagram for closest point detection"},{link:"/example/scatterplot-basic-canvas",title:"Scatterplot in Canvas",description:"Learn how to render a scatterplot in canvas to improve performances",img:"scatterplot-basic-canvas.png",alt:"a scatterplot made with react and rendered in canvas"},{link:"/heatmap",title:"Basic heatmap",description:"Most basic heatmap",img:"heatmapBasic.png",alt:"Picture of a simple heatmap made with react and d3.js"},{link:"/heatmap#tooltip",title:"Heatmap with tooltip",description:"Learn how to add a tooltip to a heatmap with react",img:"heatmapTooltip.png",alt:"Picture of a heatmap with a tooltip that appears on hover"},{link:"/heatmap#legend",title:"Continuous color scale",description:"How to add a color legend to your chart that uses a continuous color scale",img:"continuousColorLegend.png",alt:"Picture of a continuous color scale built with d3.js"},{link:"/heatmap#application",title:"Vaccination heatmap",description:"Reproduction of a famous vaccination heatmap using d3 and react",img:"heatmapVaccination.png",alt:"Picture of a heatmap showing the effect of vaccination, built with react and d3"},{link:"/correlogram",title:"Basic correlogram",description:"Learn how to build a correlogram with react and d3",img:"correlogramBasic.png",alt:"Picture of a correlogram built with react and d3"},{link:"/bubble-plot",title:"Bubble plot",description:"Learn how to build a bubble plot with react and d3.js",img:"bubble-plot-with-legend.png",alt:"Picture of a simple bubble plot with a legend made with react and d3.js"},{link:"/bubble-plot#transition",title:"Bubble plot data set transition",description:"How to smoothly animate the transition between dataset",img:"bubble-plot-dataset-transition.gif",alt:"GIF of a bubble plot smoothly transitioning data"},{link:"/2d-density-plot",title:"Hexbin chart",description:"A hexbin chart split the figure in hexagons to show a 2d density",img:"2d-density-plot.png",alt:"Picture of a hexbin chart made with React and d3.js"},{link:"/connected-scatter-plot",title:"Simple connected scatterplot",description:"A very simple connected scatter plot showing the evolution of 1 numeric variable",img:"connected-scatterplot-basic.png",alt:"Picture of a connected scatter plot made with React and d3.js"},{link:"/example/boxplot-jitter",title:"Boxplot with jitter",description:"Add individual data points using jitter on top of the boxplot",img:"boxplot-jitter.png",alt:"Picture of a boxplot with jitter built using react and d3.js"},{link:"/boxplot#box%20component",title:"Boxplot shape",description:"How to build a boxplot shape in SVG",img:"boxplotShape.png",alt:"Picture of a box component, allowing to build a boxplot later on"},{link:"/boxplot",title:"Basic boxplot",description:"How to build a basic boxplot with react",img:"boxplotBasic.png",alt:"Picture of a basic boxplot built with react and d3"},{link:"/example/boxplot-horizontal",title:"Horizontal boxplot",description:"How to build a horizontal boxplot with react",img:"boxplot-horizontal.png",alt:"Picture of a horizontal boxplot built with react and d3"},{link:"/histogram",title:"Histogram",description:"Learn how to build a histogram with react and d3.js",img:"histogram-basic.png",alt:"Picture of a simple histogram made with react and d3.js"},{link:"/histogram#transition",title:"Histogram dataset transition",description:"How to animate the transition between datasets",img:"histogram-dataset-transition.gif",alt:"GIF of a histogram with animated data transition"},{link:"/example/histogram-mirror",title:"Mirror histogram",description:"Create a mirror histogram to compare the distribution of 2 groups in a dataset",img:"histogram-mirror.png",alt:"picture of a mirror histogram made with react and d3.js"},{link:"/example/histogram-small-multiple",title:"Small multiple",description:"Create one panel per group to show its distribution separately",img:"histogram-small-multiple.png",alt:"Picture of a histogram with small multiple built with react and d3.js"},{link:"/example/histogram-with-several-groups",title:"Multiple groups",description:"A histogram with <b>multiple</b> groups displayed on the same axis.",img:"histogram-with-several-groups.png",alt:"Picture of a histogram with multiple groups built with react and d3.js"},{link:"/violin-plot",title:"Violin to Boxplot transition",description:"Using shape morphism to smoothly transition from a boxplot to a violin and reverse",img:"violinBoxplotTransition.png",alt:"gif of a violin plot smoothly transitioning to a boxplot using shape morphism"},{link:"/violin-plot#bucket%20size",title:"Bucket size effect",description:"Interactive example showing the bucket size effect on a violin chart",img:"violin-bucket-size-effect.gif",alt:"GIF showing a violin plot with varying bucket size"},{link:"/violin-plot#violin%20component",title:"Violin shape",description:"How to build the shape of a violin with SVG",img:"violinShape.png",alt:"Picture of a violin shape built with react and d3"},{link:"/violin-plot",title:"Boxplot to Violin plot",description:"Interactive example showing the difference between a boxplot and a violin",img:"boxplot-violin-transition.gif",alt:"GIF showing a mirror transition between a boxplot and a violin plot"},{link:"/violin-plot",title:"Basic violin plot",description:"Learn how to build a basic violin chart with d3 and react",img:"violinBasic.png",alt:"Picture of a basic violin chart built in react"},{link:"/violin-plot#bucket%20size",title:"Violin with variable bucket size",description:"A violin plot with a slider to change the bucket size in use",img:"violinBucketSize.png",alt:"Picture of a violin plot with variable bucket size"},{link:"/barplot",title:"Basic barplot",description:"Most basic barplot built with React and d3",img:"barplot-basic.png",alt:"Picture of a horizontal barplot made with React and d3"},{link:"/example/barplot-data-transition-animation",title:"Barplot dataset transition",description:"How to smoothly animate the transition between dataset",img:"barplotDatasetAnimation.gif",alt:"GIF of a data update on a React barplot"},{link:"/example/barplot-stacked-horizontal",title:"Horizontal Stacked Barplot",description:"Represent group and subgroup values by stacking the data",img:"barplot-stacked-horizontal.png",alt:"Picture of a stacked barchart made with react and d3"},{link:"/example/barplot-stacked-vertical",title:"Vertical Stacked Barplot",description:"Represent group and subgroup values by stacking the data",img:"barplot-stacked-vertical.png",alt:"Picture of a vertical stacked barchart made with react and d3"},{link:"/density-plot",title:"Basic density plot",description:"Most basic density plot built with React and d3",img:"densityBasic.png",alt:"Picture of a basic density plot built with React and d3"},{link:"/density-plot#variations",title:"Density plot with multiple groups",description:"How to add several groups on the same density plot",img:"densityMultipleGroups.png",alt:"Picture of a density plot with multiple groups"},{link:"/ridgeline",title:"Basic ridgeline chart",description:"Most basic version of a ridgeline plot",img:"ridgelineBasic.png",alt:"Picture of a basic ridgeline chart built with react and d3"},{link:"/line-chart#basic",title:"Most basic line chart",description:"The most basic line chart one can make using d3 and react",img:"line-chart-basic.png",alt:"Picture of a very simple line chart made with react and d3"},{link:"/line-chart#transition",title:"Line chart with dataset transition",description:"How to smoothly animate the transition between 2 dataset on a line chart",img:"line-chart-data-transition.gif",alt:"GIF of a line chart that animates between 2 dataset"},{link:"/example/line-chart-synchronized-cursors",title:"Synchronized cursors",description:"Add a cursor synchronized on all your charts",img:"line-chart-synced-cursor.gif",alt:"line charts with synchronized cursors"},{link:"/area-plot",title:"Basic Area Chart",description:"Most basic version of an area chart made with react and d3.js",img:"area-chart-basic.png",alt:"Picture of a basic area chart made with React and D3"},{link:"/stacked-area-plot",title:"Basis stacked area chart",description:"Most basic version of a stacked area chart. Explains how to use the stack() function of d3.js",img:"stacked-area-plot-basic.png",alt:"picture of a basic stacked area plot made with react"},{link:"/streamchart",title:"Basic Streamgraph",description:"Most basic streamgraph one can build using d3 and react",img:"streamgraph-basic.png",alt:"Picture of a basic streamgraph made using Reacrt and d3.js"},{link:"/streamchart#hover&effect",title:"Streamgraph with hover effect",description:"How to add a hover effect on a streamgraph to highlight a group",img:"streamgraph-hover-effect.gif",alt:"GIF of a streamgraph react component that supports hover effect"},{link:"/streamchart#transition",title:"Offset and Smoothing transition",description:"An interactive streamgraph example showing how to animate transition between the chart stacking features.",img:"streamgraph-offset-type-transition.gif",alt:"GIF of a streamgraph"},{link:"/streamchart#application",title:"Streamgraph application",description:"Streamgraph with a slider to zoom on a time stamp and with interactive inline legends",img:"streamgraph-application.gif",alt:"GIF of a streamgraph with multiple interactive features"},{link:"/example/timeseries-moving-average",title:"Timeseries with moving average",description:"A scatterplot used for timeseries, with the moving average shown as a line chart on top.",img:"timeseries-moving-average.png",alt:"Picture of a timeseries chart made with React and D3.js: scatterplot and line chart in use."},{link:"/circular-packing",title:"Most basic circular packing chart",description:"The most basic circular packing chart one can make using d3.js and React.",img:"circle-pack-basic.png",alt:"Picture of a very basic circle packing chart"},{link:"/circular-packing",title:"Circular packing: 2 levels of hierarchy",description:"A simple circular packing chart with 2 levels of hierarchy built with React and d3.",img:"circle-pack-2-levels.png",alt:"Picture of a very basic circle packing chart with 2 levels of hierarchy"},{link:"/example/circle-packing-with-d3-force",title:"Circle Pack with d3-force",description:"Another approach to build a circle packing chart using physical forces to compute node positions.",img:"circle-pack-d3-force.png",alt:"Picture of a circle packing chart made using the d3-force plugin"},{link:"/example/arc-diagram-vertical",title:"Vertical arc diagram",description:"The vertical version of the arc diagram is more convenient to display labels",img:"vertical-arc-diagram.png",alt:"Picture of a vertical arc diagram"},{link:"/network-chart#rendering",title:"Most basic network chart",description:"Most basic network chart using the d3-force plugin to apply physical forces.",img:"network-chart-basic.png",alt:"Picture of a very simple network chart built with React and D3.js."},{link:"/network-chart#rendering",title:"Play with forces",description:"A playground to discover the effect of the various forces you can apply to your particles",img:"network-chart-force-playground.png",alt:"Picture of a playground allowing to play with the various d3 forces"},{link:"/example/network-diagram-with-colored-groups",title:"Force directed graph",description:"A force directed network chart showing character co-occurence in les miserables",img:"network-les-miserables.png",alt:"Picture of a force directed network chart showing character co-occurence in les miserables"}]},7032:function(t,e,i){"use strict";i.d(e,{e:function(){return m}});var a=i(5893),r=i(7294);let o=[{x:1,y:40},{x:2,y:12},{x:3,y:34},{x:4,y:33},{x:5,y:22},{x:6,y:9},{x:7,y:18},{x:8,y:78},{x:9,y:28},{x:10,y:34}],n=[{x:1,y:90},{x:2,y:74},{x:3,y:84},{x:4,y:45},{x:5,y:65},{x:6,y:96},{x:7,y:65},{x:8,y:75},{x:9,y:58},{x:10,y:36}];var s=i(7875),l=i(6824);let c={top:30,right:30,bottom:50,left:50},h=t=>{var e;let{width:i,height:o,data:n,cursorPosition:l,setCursorPosition:h,color:p}=t,m=(0,r.useRef)(null),g=i-c.right-c.left,u=o-c.top-c.bottom,[f,x]=s.Wem(n,t=>t.y),b=(0,r.useMemo)(()=>s.BYU().domain([0,x||0]).range([u,0]),[n,o]),[w,v]=s.Wem(n,t=>t.x),j=(0,r.useMemo)(()=>s.BYU().domain([0,v||0]).range([0,g]),[n,i]);(0,r.useEffect)(()=>{let t=s.Ys(m.current);t.selectAll("*").remove();let e=s.LLu(j);t.append("g").attr("transform","translate(0,"+u+")").call(e);let i=s.y4O(b);t.append("g").call(i)},[j,b,u]);let y=s.jvg().x(t=>j(t.x)).y(t=>b(t.y)),k=y(n);if(!k)return null;let P=t=>{let e=j.invert(t),i=1/0,a=null;for(let t of n){let r=Math.abs(t.x-e);r<i&&(i=r,a=t)}return a};return(0,a.jsx)("div",{children:(0,a.jsxs)("svg",{width:i,height:o,children:[(0,a.jsxs)("g",{width:g,height:u,transform:"translate(".concat([c.left,c.top].join(","),")"),children:[(0,a.jsx)("path",{d:k,opacity:1,stroke:p,fill:"none",strokeWidth:2}),l&&(0,a.jsx)(d,{height:u,x:l,y:b(null===(e=P(l))||void 0===e?void 0:e.y),color:p}),(0,a.jsx)("rect",{x:0,y:0,width:g,height:u,onMouseMove:t=>{let e=t.currentTarget.getBoundingClientRect(),i=t.clientX-e.left,a=P(i);h(j(a.x))},onMouseLeave:()=>h(null),visibility:"hidden",pointerEvents:"all"})]}),(0,a.jsx)("g",{width:g,height:u,ref:m,transform:"translate(".concat([c.left,c.top].join(","),")")})]})})},d=t=>{let{x:e,y:i,height:r,color:o}=t,n=(0,l.q_)({to:{x:e,y:i}});return n.x?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(l.q.line,{x1:n.x,x2:n.x,y1:0,y2:r,stroke:"black",strokeWidth:1}),(0,a.jsx)("circle",{cx:e,cy:i,r:5,fill:o})]}):null},p=t=>{let{width:e=700,height:i=400}=t,[s,l]=(0,r.useState)(null);return(0,a.jsxs)("div",{style:{display:"flex"},children:[(0,a.jsx)(h,{data:o,width:e/2,height:i,cursorPosition:s,setCursorPosition:l,color:"#e85252"}),(0,a.jsx)(h,{data:n,width:e/2,height:i,cursorPosition:s,setCursorPosition:l,color:"#6689c6"})]})},m=t=>{let{width:e=700,height:i=400}=t;return(0,a.jsx)(p,{width:e,height:i})}},6395:function(t){t.exports={container:"graphLinkImage_container__vhwty",title:"graphLinkImage_title__zwMK0"}},6824:function(t,e,i){"use strict";i.d(e,{q:function(){return a.q},q_:function(){return a.q_},to:function(){return a.to},vc:function(){return a.vc}});var a=i(2236)}},function(t){t.O(0,[3996,7875,5660,2236,645,1188,9774,2888,179],function(){return t(t.s=7726)}),_N_E=t.O()}]);