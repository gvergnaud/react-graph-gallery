(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1334],{246:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/connected-scatter-plot",function(){return n(4026)}])},6820:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var s=n(5893);n(7294);var i=n(8843),r=n(6438);let a=e=>{let{imgLink:t,height:n,opacity:i,children:r}=e;return(0,s.jsxs)("div",{className:"relative",children:[(0,s.jsx)("div",{style:{backgroundImage:"url("+t+")",height:n,backgroundAttachment:"fixed",opacity:i,backgroundPosition:"center",backgroundRepeat:"no-repeat",backgroundSize:"cover"}}),(0,s.jsx)("div",{className:"absolute top-0 left-0 w-full h-full",children:r})]})};function c(e){var t;let{chartId:n}=e,c=(null===(t=i.c.find(e=>e.id===n))||void 0===t?void 0:t.label)||"chart";return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h2",{id:"inspiration",children:c+" inspiration"}),(0,s.jsxs)("p",{children:["If you're looking for inspiration to create your next"," ",(0,s.jsx)("span",{children:c}),", note that"," ",(0,s.jsx)("a",{href:"https://www.dataviz-inspiration.com",children:"dataviz-inspiration.com"})," ","showcases many examples. Definitely the best place to get ... inspiration!"]}),(0,s.jsx)("div",{className:"border mb-10",children:(0,s.jsx)(a,{height:250,imgLink:"https://github.com/holtzy/dataviz-inspiration/blob/main/public/misc/overview1.png?raw=true",opacity:.3,children:(0,s.jsx)("div",{className:"flex justify-center items-center h-full",children:(0,s.jsxs)("div",{style:{maxWidth:400},className:"flex flex-col items-center",children:[(0,s.jsxs)("p",{className:"text-center text-sm",children:[(0,s.jsx)("a",{href:"https://www.dataviz-inspiration.com",children:"dataviz-inspiration.com"})," ","showcases hundreds of stunning dataviz projects. Have a look to get some ideas on how to make your ",(0,s.jsx)("span",{children:c})," ","looks good!"]}),(0,s.jsx)(r.J,{href:"https://www.dataviz-inspiration.com",isFilled:!0,size:"md",children:"visit"})]})})})})]})}},505:function(e,t,n){"use strict";n.d(t,{r:function(){return d}});var s=n(5893),i=n(1664),r=n.n(i),a=n(8843),c=n(88),o=n(3572);let d=e=>{let{chartId:t}=e,n=a.c.filter(e=>e.id===t)[0].label;return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h2",{id:"responsiveness",children:"Responsive "+n+" with react"}),(0,s.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,s.jsx)("code",{children:"width"})," and ",(0,s.jsx)("code",{children:"height"})," and will render a ",n," of those dimensions."]}),(0,s.jsxs)("p",{children:["Making the ",n," responsive requires adding a ",(0,s.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,s.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,s.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,s.jsx)(c.U,{startOpen:!1,title:(0,s.jsxs)("span",{children:[(0,s.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,s.jsx)(o.d,{code:l})}),(0,s.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,s.jsx)(r(),{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),(0,s.jsx)("br",{})]})},l='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},8893:function(e,t,n){"use strict";n.d(t,{H:function(){return i}});var s=n(5893);let i=e=>{let{text:t}=e;return(0,s.jsxs)("blockquote",{className:"mt-10 opacity-20",children:[(0,s.jsx)("b",{className:"text-reactGallery mr-4",children:"ToDo"}),t]})}},4026:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return y}});var s=n(5893),i=n(7294),r=n(153),a=n(9965),c=n(1651),o=n(3572),d=n(1122),l=n(1664),h=n.n(l),x=n(6820),p=n(505),u=n(6438);let j=[{x:1,y:90},{x:2,y:12},{x:3,y:34},{x:4,y:53},{x:5,y:52},{x:6,y:9},{x:7,y:18},{x:8,y:78},{x:9,y:28},{x:10,y:34}];var m=n(7875);let f={top:30,right:30,bottom:50,left:50},g=e=>{let{width:t,height:n,data:r}=e,a=(0,i.useRef)(null),c=t-f.right-f.left,o=n-f.top-f.bottom,[d,l]=m.Wem(r,e=>e.y),h=m.BYU().domain([0,l||0]).range([o,0]),[x,p]=m.Wem(r,e=>e.x),u=m.BYU().domain([0,p||0]).range([0,c]);(0,i.useEffect)(()=>{let e=m.Ys(a.current);e.selectAll("*").remove();let t=m.LLu(u);e.append("g").attr("transform","translate(0,"+o+")").call(t);let n=m.y4O(h);e.append("g").call(n)},[u,h,o]);let j=m.jvg().x(e=>u(e.x)).y(e=>h(e.y)),g=j(r);if(!g)return null;let b=r.map((e,t)=>(0,s.jsx)("circle",{cx:u(e.x),cy:h(e.y),r:4,fill:"#cb1dd1"},t));return(0,s.jsx)("div",{children:(0,s.jsxs)("svg",{width:t,height:n,children:[(0,s.jsxs)("g",{width:c,height:o,transform:"translate(".concat([f.left,f.top].join(","),")"),children:[(0,s.jsx)("path",{d:g,opacity:.3,stroke:"#cb1dd1",fill:"none",strokeWidth:2}),b]}),(0,s.jsx)("g",{width:c,height:o,ref:a,transform:"translate(".concat([f.left,f.top].join(","),")")})]})})},b=e=>{let{width:t=700,height:n=400}=e;return(0,s.jsx)(g,{data:j,width:t,height:n})};var w=n(8893);let v=(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("p",{children:["A"," ",(0,s.jsx)("a",{href:"https://www.data-to-viz.com/graph/connectedscatter.html",children:"connected scatterplot"})," ","displays the evolution of a numeric variable. Data points are represented by a ",(0,s.jsx)("b",{children:"dot"})," and connected with straight line ",(0,s.jsx)("b",{children:"segments"}),". A variation of the connected scatterplot allows to study the evolution of"," ",(0,s.jsx)("b",{children:"2 numeric variables"})," together."]}),(0,s.jsxs)("p",{children:["This page explains how to build a connected scatterplot using"," ",(0,s.jsx)("code",{children:"react"})," and",(0,s.jsx)("code",{children:"d3.js"}),". It is highly connected with the"," ",(0,s.jsx)(h(),{href:"line-chart",children:"line chart"})," section of the gallery but provides further information concerning connected scatterplot specific features."]})]});function y(){return(0,s.jsxs)(r.A,{title:"Connected scatterplot with React and D3.js",seoDescription:"How to build a connected scatterplot with React and D3.js. A set of re-usable components coming with editable code and explanations.",children:[(0,s.jsx)(a.Z,{title:"Connected Scatterplot",description:v,chartType:"connectedScatter"}),(0,s.jsx)("h2",{id:"data",children:"The Data"})," ",(0,s.jsxs)("p",{children:["The dataset required to build a connected scatterplot is the same as for a ",(0,s.jsx)(h(),{href:"line-chart",children:"line chart"}),". It is usually an array where each item is an object providing the ",(0,s.jsx)("code",{children:"x"})," and the"," ",(0,s.jsx)("code",{children:"y"})," values of the data point."]}),(0,s.jsx)("br",{}),(0,s.jsx)("p",{children:"Here is a minimal example:"}),(0,s.jsx)(o.d,{code:k}),(0,s.jsxs)("p",{children:[(0,s.jsx)("u",{children:"Note"}),": if your data is in ",(0,s.jsx)("code",{children:".csv"})," format, you can translate it thanks to the ",(0,s.jsx)("code",{children:"d3.csv()"})," function as suggested"," ",(0,s.jsx)("a",{href:"https://d3-graph-gallery.com/graph/line_basic.html",children:"here"}),"."]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("u",{children:"Note"}),": a line chart is often made to represent ",(0,s.jsx)("b",{children:"time"}),". If your ",(0,s.jsx)("code",{children:"x"})," property is a ",(0,s.jsx)("b",{children:"date"}),", please visit the"," ",(0,s.jsx)(h(),{href:"/timeseries",children:"timeseries"})," section."]}),(0,s.jsx)(u.J,{href:"/timeseries",size:"sm",isFilled:!0,children:"Timeseries section"}),(0,s.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,s.jsxs)("p",{children:["The goal here is to create a ",(0,s.jsx)("code",{children:"ConnectedScatterplot"})," component that will be stored in a ",(0,s.jsx)("code",{children:"ConnectedScatterplot.tsx"})," file. This component requires 3 props to render: a ",(0,s.jsx)("code",{children:"width"}),", a"," ",(0,s.jsx)("code",{children:"height"}),", and some ",(0,s.jsx)("code",{children:"data"}),"."]}),(0,s.jsxs)("p",{children:["The shape of the ",(0,s.jsx)("code",{children:"data"})," is described above. The"," ",(0,s.jsx)("code",{children:"width"})," and ",(0,s.jsx)("code",{children:"height"})," will be used to render an"," ",(0,s.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the Connected Scatterplot."]}),(0,s.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our"," ",(0,s.jsx)("code",{children:"ConnectedScatterplot"})," component:"]}),(0,s.jsx)(o.d,{code:z}),(0,s.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the SVG ",(0,s.jsx)("code",{children:"path"}),", but it's React that will render them in the ",(0,s.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,s.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,s.jsx)("a",{href:"https://www.d3-graph-gallery.com",children:"d3.js examples"}),"."]}),(0,s.jsx)("h2",{id:"basic example",children:"Basic connected scatterplot"}),(0,s.jsxs)("p",{children:["All the explanation about ",(0,s.jsx)("b",{children:"margins"}),", ",(0,s.jsx)("b",{children:"scales"}),", ",(0,s.jsx)("b",{children:"axes"})," and"," ",(0,s.jsx)("code",{children:"d3.line()"})," are already made in the"," ",(0,s.jsx)(h(),{href:"line-chart",children:"line chart"})," section of the gallery."]}),(0,s.jsxs)("p",{children:["The only thing we need to add here is some ",(0,s.jsx)("b",{children:"circles"})," for each data point. The process is exactly the same as for a"," ",(0,s.jsx)(h(),{href:"scatter-plot",children:"scatterplot"}),". We have to loop through the data and a ",(0,s.jsx)("code",{children:"circle"})," for each item using the x and y scales:"]}),(0,s.jsx)(d.$,{vizName:"ConnectedScatterplotBasic",VizComponent:b,height:500,maxWidth:600,caption:"Most basic line chart made with react (rendering) and d3.js (path computation)"}),(0,s.jsxs)("p",{children:["Note: you can compare this with a"," ",(0,s.jsx)("a",{href:"https://d3-graph-gallery.com/graph/line_basic.html",children:"d3.js only approach"})]}),(0,s.jsx)(p.r,{chartId:"connectedScatter"}),(0,s.jsx)(w.H,{text:"add links to line chart examples"}),(0,s.jsx)(w.H,{text:"reproduce the connected scatter from the state of JS survey"}),(0,s.jsx)(x.Z,{chartId:"connectedScatter"}),(0,s.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 my-3"}),(0,s.jsx)(c.Z,{chartFamily:"evolution"}),(0,s.jsx)("div",{className:"mt-20"})]})}let k="\nconst data = [\n  {x:1, y: 90},\n  {x: 2, y: 12},\n  {x: 3, y: 34},\n  {x: 4, y: 53},\n  {x: 5, y: 98},\n]\n".trim(),z='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype ConnectedScatterplotProps = {\n  width: number;\n  height: number;\n  data: {x: number, y: number}[];\n};\n\nexport const ConnectedScatterplot = ({ width, height, data }: ConnectedScatterplotProps) => {\n\n  // read the data\n  // build the scales and axes\n  // build the lines and circles\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render axes\n        // render all the <path>\n      </svg>\n    </div>\n  );\n};\n'.trim()}},function(e){e.O(0,[3996,7875,5660,645,298,9774,2888,179],function(){return e(e.s=246)}),_N_E=e.O()}]);